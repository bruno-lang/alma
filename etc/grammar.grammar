%v2
grammar       : member (, member)*
member        : comment | rule
comment       : '%' (!\n+):text
rule          : name, ('=' | (':' ':'? '='?)), selection ';'?
selection     : sequence (, '|' >> sequence )*
sequence      : element ( >> element )*
element       : (completion | group | option | string |  terminal | ref ) occurrence?
completion    : '..' capture
group         : '(', selection, ')' capture
option        : '[', selection, ']' capture

occurrence    : 'x'? num:min {'-' '+'}:to? num:max? | qmark | star | plus
num           : #+
qmark         : '?'
star          : '*'
plus          : '+'

ref           : name capture
name          : '-'? '\'? @ {@ # '_' '-'}*
capture       : [':' name:alias ]

string        : ''' !'''x2+ '''

terminal      : pattern | ranges | figures
pattern       : not? (gap | pad | indent | separator)
figures       : '{', -figure (, -figure )* '}' capture
figure        : ranges | name

wildcard      : '.'
symbol        : ''' . '''
code-point    : 'U+' &x4-8
literal       : code-point | symbol
range         : literal, '-', literal
category      : 'U+{' @+ '}'
ranges        : not? (wildcard | letter | digit | hex | octal | binary | category | range | literal | whitespace | shortname )

letter        : '@'
digit         : '#'
hex           : '&'
octal         : '8'
binary        : '1'
not           : '!'
whitespace    : '_'
gap           : ','
pad           : '~'
indent        : '>>'
separator     : '^'

shortname     : tab | lf | cr
tab           : '\t'
lf            : '\n'
cr            : '\r'